name: "CI"
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  check-rust:
    timeout-minutes: 3
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          components: rustfmt, clippy
      - name: cargo fetch
        run: cargo fetch --verbose
      - name: cargo fmt
        uses: actions-rust-lang/rustfmt@v1
        if: always()
      - name: cargo check
        run: cargo check --all-features --all-targets
        if: always()
      - id: clippy
        run: cargo clippy --all-features --all-targets
        if: always()

  check-python:
    timeout-minutes: 3
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: eifinger/setup-rye@v4
        with:
          version: '0.43.0'
      - name: rye fmt
        run: |
          rye fmt --check
        if: always()

  test:
    timeout-minutes: 15
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        kind_image:
          - "v1.32.0"
          - "v1.31.4"
          - "v1.30.8"
          - "v1.29.12"
          - "v1.28.15"
          - "v1.27.16"
          - "v1.26.15"
          - "v1.25.16"
          - "v1.24.17"
    env:
      KIND_IMAGE: kindest/node:${{matrix.kind_image}}
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          rustflags: ""
      - name: Setup kind
        run: |
          kind create cluster --image="$KIND_IMAGE" --name test-pgd
      - run: cargo fetch --verbose
      - run: cargo test --all-features
        timeout-minutes: 10

  tests-result:
    runs-on: ubuntu-latest
    needs: test
    if: always()
    steps:
      - name: All tests ok
        if: ${{ !(contains(needs.*.result, 'failure')) }}
        run: exit 0
      - name: Some tests failed
        if: ${{ contains(needs.*.result, 'failure') }}
        run: exit 1

  lint-helm:
    timeout-minutes: 1
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: helm lint charts/pod-graceful-drain --strict

  build-image:
    timeout-minutes: 5
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: |
          docker build --file docker/build.Dockerfile \
            --tag "localhost/pod-graceful-drain:latest" \
            .
      - run: docker image save --output pod-graceful-drain.tar localhost/pod-graceful-drain
      - uses: actions/upload-artifact@v4
        with:
          name: pod-graceful-drain.tar
          path: ./pod-graceful-drain.tar

  smoke-test:
    timeout-minutes: 15
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        kind_image:
          - "v1.32.0"
          - "v1.31.4"
          - "v1.30.8"
          - "v1.29.12"
          - "v1.28.15"
          - "v1.27.16"
          - "v1.26.15"
          - "v1.25.16"
          - "v1.24.17"
    env:
      KIND_IMAGE: kindest/node:${{matrix.kind_image}}
    needs:
      - build-image
    steps:
      - uses: actions/checkout@v4
      - uses: eifinger/setup-rye@v4
        with:
          version: '0.43.0'
      - uses: actions/download-artifact@v4
        with:
          name: pod-graceful-drain.tar
      - run: rye sync
      - name: Smoke test - Setup
        run: |
          docker image load --input pod-graceful-drain.tar
          kind create cluster --image="$KIND_IMAGE" --name test-pgd
          kind load docker-image localhost/pod-graceful-drain:latest --name=test-pgd
          helm install pod-graceful-drain charts/pod-graceful-drain \
            --create-namespace --namespace pod-graceful-drain \
            --set image.repository=localhost/pod-graceful-drain --set image.tag=latest \
            --set replicaCount=1 \
            --set experimentalGeneralIngress=true \
            --set logLevel=info\\,pod_graceful_drain=trace \
            --wait=true --timeout=1m
      - name: Smoke test
        run: rye test -- tests-integ/test_smoke.py --capture=tee-sys
        timeout-minutes: 5
      - name: Smoke test - Dump
        if: always()
        run: |
          KUBECTL="kubectl --namespace pod-graceful-drain"
          echo "::group::kubectl get"
          ${KUBECTL} get --ignore-not-found=true --output wide all
          echo "::endgroup::"

          echo "::group::kubectl describe"
          ${KUBECTL} describe all
          echo "::endgroup::"

          for POD in $(${KUBECTL} get pod -o=name); do
          echo "::group::kubectl logs ${POD}"
          ${KUBECTL} logs --ignore-errors=true "${POD}"
          echo "::endgroup::"
          done
      - name: Smoke test - Cleanup
        run: |
          kind delete cluster --name test-pgd
      - name: Drain test
        run: rye test -- tests-integ/test_drain.py --capture=tee-sys
        timeout-minutes: 10

  smoke-tests-result:
    runs-on: ubuntu-latest
    needs: smoke-test
    if: always()
    steps:
      - name: All tests ok
        if: ${{ !(contains(needs.*.result, 'failure')) }}
        run: exit 0
      - name: Some tests failed
        if: ${{ contains(needs.*.result, 'failure') }}
        run: exit 1
